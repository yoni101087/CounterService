name: Docker Build and Run

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-app:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Get short SHA
        id: short_sha
        run: echo "::set-output name=short_sha::$(git rev-parse --short=7 $GITHUB_SHA)"

      - name: Build the Docker Image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/counterservice:${{ steps.short_sha.outputs.short_sha }} .

      - name: Run Docker container
        run: docker run -d --name counterservice -p 80:80 ${{ secrets.DOCKERHUB_USERNAME }}/counterservice:${{ steps.short_sha.outputs.short_sha }} \
             curl -s -o /dev/null -w "%{http_code}" http://localhost && docker ps -a

          
      - name: Log in to Docker Hub
        run: |
          if docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}; then
            echo "Docker Hub login successful"
          else
            echo "Docker Hub login failed"
            exit 1  # Fail the workflow if login fails
          fi

#  test-app:
#    needs: build-app
#    runs-on: ubuntu-latest
#    steps:
#      - name: Test App Health
#        run: |
#          if curl -sSf http://localhost; then
#            echo "App is healthy"
#          else
#            echo "App is not healthy"
#            exit 1  # Fail the workflow if the health check fails
#          fi

  save-artifact:
    needs: build-app
    runs-on: self-hosted
    steps:

      - name: Check out code
        uses: actions/checkout@v2

      - name: Package Helm chart
        run: |
          helm package ./charts

      - name: Upload Helm chart artifact
        uses: actions/upload-artifact@v2
        with:
          name: counterservice-helm-chart-${{ steps.short_sha.outputs.short_sha }}.tgz
          path: ./counterservice-0.1.0.tgz

      - name: Upload artifact to Nexus
        env:
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          NEXUS_URL: 'http://nexus.yonif.net'  # Replace with your Nexus URL
          NEXUS_REPOSITORY: 'counterservice'  # Replace with the repository ID in Nexus
        run: |
          curl -v -u $NEXUS_USERNAME:$NEXUS_PASSWORD --upload-file ./counterservice-0.1.0.tgz $NEXUS_URL/repository/$NEXUS_REPOSITORY/my-release/${{ steps.short_sha.outputs.short_sha }}/counterservice-helm-chart-${{ steps.short_sha.outputs.short_sha }}.tgz
